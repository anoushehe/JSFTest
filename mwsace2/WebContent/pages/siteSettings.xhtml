<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ez="http://java.sun.com/jsf/composite/demo">

<ui:composition template="/templates/common_pages_site_setting.xhtml">
	<ui:define name="pageTitle">MWS - Site Settings page</ui:define>
	<ui:define name="pageHeader">Site Settings</ui:define>

	<ui:define name="body">
		
		<h:form id="treeform">
		<div class="box-header well">
			<h2>
				<i class="icon-list"></i> Site settings
			</h2>
			<div class="box-icon">
				<a href="#" class="btn btn-minimize btn-round"><i id="sbtn"
					class="icon-chevron-down"></i></a> <a href="#"
					class="btn btn-close btn-round"><i class="icon-remove"></i></a>
			</div>
		</div>
		<div class="box-content" id="minsearchbtn">
			<div class="box-content">
				<div id="myTabContent" class="tab-content">
					<div id="jstree">
					    <ul>
					      <h:outputText value="#{siteSettings.treeString}" escape="false" />
					    </ul>
					  </div>
				
					<table	class="table table-striped table-bordered bootstrap-datatable datatable3">
						<tr>
	   						<td>
								<input type="button" value="Save Settings" onclick="savesettings()" />
							</td>
						</tr>
					</table>
				</div>
			</div>
		</div>
		
		</h:form>
		
		
		<h:form>
			
    			<a4j:jsFunction name="saveValues"  action="#{siteSettings.savesettings}" render="treeform, scripttree">
    				<a4j:param name="data1" assignTo="#{siteSettings.treedata}" />
    				<a4j:param name="data2" assignTo="#{siteSettings.nuovitreedata}" />
    				<a4j:param name="data3" assignTo="#{siteSettings.editedtreedata}" />
    				<a4j:param name="data4" assignTo="#{siteSettings.deletedtreedata}" />
    			</a4j:jsFunction>
 			</h:form>
	</ui:define>
	<ui:define name="scriptdata">
	<h:panelGrid id="scripttree"> 
	<script>
		/* <![CDATA[ */
		var newnodes=new Array();
		var deletednodes=new Array();
		var editednodes=new Array();
		
		function savesettings(){
			var tree = $("#jstree").jstree(true);
			
			// var data1=$("#jstree").jstree("get_selected");
			var data1=tree.get_selected(); 
			// get_text (obj) 
			// var res = data1.split(",");
			// alert (data1.length);
			var nuovinodi="";		
			for (var i=0; i<newnodes.length; i++) {
				var nodInfo = $("#" + newnodes[i]);

				var id_value = nodInfo.attr("id");    
				var node_name = nodInfo.children("a").text();
				var parent_id = tree.get_parent(newnodes[i]);
				nuovinodi=nuovinodi+"|"+parent_id+":"+id_value+":"+node_name;
			}
			var editednodi="";			 
			for (var i=0; i<editednodes.length; i++) {
				var nodInfo = $("#" + editednodes[i]);

				var id_value = nodInfo.attr("id");
				var node_name = nodInfo.children("a").text();
				editednodi=editednodi+","+id_value+":"+node_name;
			}
			if (editednodes.length!=0)
				editednodi=editednodi.substring(1);
			
			saveValues(data1, nuovinodi, editednodi, deletednodes.join());
			newnodes=new Array();
			deletednodes=new Array();
			editednodes=new Array();
		}

		
				
		
	    // 6 create an instance when the DOM is ready
	    $('#jstree').jstree({
	        "checkbox" : {
	            "keep_selected_style" : false
	          },
	          "core" : {
	              "check_callback" : true
	            },
	          "plugins" : [ "checkbox" , "contextmenu"],
	          contextmenu: {
		          items: customMenu,
		          "select_node": false
			   }
	        });

	    function customMenu(node) {
	        // The default set of all items
	        var idelestart=$(node).attr('id').substring(0, 1);
	        var tree = $("#jstree").jstree(true);
	        var items = {
	    	        
	            renameItem: { // The "rename" menu item
	                label: "Rename",
	                action: function () {
	                	tree.edit(node);
	                	if (idelestart != 'j')
	                		editednodes.push($(node).attr('id'));
		            }
	            },
	            deleteItem: { // The "delete" menu item
	                label: "Delete",
	                action: function () {
	                	tree.delete_node(node);
	                	if (idelestart != 'j')
	                		deletednodes.push($(node).attr('id'));
		            }
	            },
	            createItem: { 
	                label: "Create",
	                action: function (obj) {
	                	node1 = tree.create_node(node);
	                	// alert('--'+JSON.stringify(node1)); // .attr('id', 't_'+node1.attr('id'));
	                    tree.edit(node1);
	                    newnodes.push(node1);
		            }
	            },
	            copyItem: { 
	                label: "Copy",
	                action: function (obj) {
	                	tree.copy(node);
		            }
	            },
	            pasteItem: { 
	                label: "Paste",
	                action: function (obj) {
	                	tree.paste(node);
						// alert( JSON.stringify($(node).find('li').prevObject[0].children[0] ) );
	                	newnodes.push($(node).find('li').prevObject[0].children[0]);
		            }
	            }
	        };

	        if ($(node).attr('id') == "root" || idelestart === "i" || idelestart === "s") {
	            delete items.renameItem;
	            delete items.deleteItem;
	            delete items.pasteItem;
	        }	        
	        if (idelestart === "i" || idelestart === "s") {
	            delete items.createItem;
	        }
	        if ($(node).attr('id') == "root" || idelestart === "s") {
	            delete items.copyItem;
	        }
	        if ( tree.get_parent(node) != "root" && $(node).attr('id') != "root") {
	        	delete items.pasteItem;
	        	delete items.createItem;   
		    }

	       
	        return items;
	    }

		   
	    // 7 bind to events triggered on the tree
	    $('#jstree').on("changed.jstree", function (e, data) {
	      // console.log(data.selected);
	    });

	    $('#jstree').on("ready.jstree", function (e, data) {
	    	var tree = $("#jstree").jstree(true);
	    	tree.open_node(tree.get_node("root"));
		    });

	    /* ]]> */
  	</script>
  	</h:panelGrid>
	</ui:define>
</ui:composition>
</html>